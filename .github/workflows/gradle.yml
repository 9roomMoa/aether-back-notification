name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GIT_TOKEN }}

      # 1. Java 21 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 2. gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 2. SpringBoot 애플리케이션 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar

      # 3. Docker 이미지 빌드
      - name: Docker Image Build
        run: |
          docker build --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/aether-back-notification \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/aether-back-notification .

      # 4. DockerHub 로그인
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 5. DockerHub 이미지 push
      - name: DockerHub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/aether-back-notification

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      # 1. 최신 이미지를 pull 받음
      - name: Docker pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aether-back-notification

      # 2. 기존 컨테이너 중지 및 삭제
      - name: Stop and Remove Existing Container
        run: |
          sudo docker stop aether-back-notification 2>/dev/null || true
          sudo docker rm aether-back-notification 2>/dev/null || true

      # 3. 최신 이미지를 컨테이너화하여 실행
      - name: Run New Container
        run: |
          sudo docker run --name aether-back-notification --rm -d \
          -p 8084:8084 -e SPRING_PROFILES_ACTIVE=notification \
          --network host ${{ secrets.DOCKERHUB_USERNAME }}/aether-back-notification

      # 4. 미사용 이미지 정리
      - name: Delete old Docker Image
        run: sudo docker image prune -f
